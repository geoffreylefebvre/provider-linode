/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type InterfacesInitParameters struct {
}

type InterfacesObservation struct {
	Active *bool `json:"active,omitempty" tf:"active,omitempty"`

	// The ID of the VPC Subnet.
	ID *float64 `json:"id,omitempty" tf:"id,omitempty"`
}

type InterfacesParameters struct {
}

type LinodesInitParameters struct {
}

type LinodesObservation struct {

	// The ID of the VPC Subnet.
	ID *float64 `json:"id,omitempty" tf:"id,omitempty"`

	Interfaces []InterfacesObservation `json:"interfaces,omitempty" tf:"interfaces,omitempty"`
}

type LinodesParameters struct {
}

type SubnetInitParameters struct {

	// The IPv4 range of this subnet in CIDR format.
	// The IPv4 range of this subnet in CIDR format.
	IPv4 *string `json:"ipv4,omitempty" tf:"ipv4,omitempty"`

	// The label of the VPC. Only contains ASCII letters, digits and dashes.
	// The label of the VPC subnet.
	Label *string `json:"label,omitempty" tf:"label,omitempty"`

	// The id of the parent VPC for this VPC Subnet.
	// The id of the parent VPC for this VPC Subnet
	// +crossplane:generate:reference:type=github.com/linode/provider-linode/apis/vpc/v1alpha1.VPC
	VPCID *float64 `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`
}

type SubnetObservation struct {

	// The date and time when the VPC was created.
	// The date and time when the VPC Subnet was created.
	Created *string `json:"created,omitempty" tf:"created,omitempty"`

	// The ID of the VPC Subnet.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The IPv4 range of this subnet in CIDR format.
	// The IPv4 range of this subnet in CIDR format.
	IPv4 *string `json:"ipv4,omitempty" tf:"ipv4,omitempty"`

	// The label of the VPC. Only contains ASCII letters, digits and dashes.
	// The label of the VPC subnet.
	Label *string `json:"label,omitempty" tf:"label,omitempty"`

	// A list of Linode IDs that added to this subnet.
	Linodes []LinodesObservation `json:"linodes,omitempty" tf:"linodes,omitempty"`

	// The date and time when the VPC was last updated.
	// The date and time when the VPC Subnet was updated.
	Updated *string `json:"updated,omitempty" tf:"updated,omitempty"`

	// The id of the parent VPC for this VPC Subnet.
	// The id of the parent VPC for this VPC Subnet
	VPCID *float64 `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`
}

type SubnetParameters struct {

	// The IPv4 range of this subnet in CIDR format.
	// The IPv4 range of this subnet in CIDR format.
	// +kubebuilder:validation:Optional
	IPv4 *string `json:"ipv4,omitempty" tf:"ipv4,omitempty"`

	// The label of the VPC. Only contains ASCII letters, digits and dashes.
	// The label of the VPC subnet.
	// +kubebuilder:validation:Optional
	Label *string `json:"label,omitempty" tf:"label,omitempty"`

	// The id of the parent VPC for this VPC Subnet.
	// The id of the parent VPC for this VPC Subnet
	// +crossplane:generate:reference:type=github.com/linode/provider-linode/apis/vpc/v1alpha1.VPC
	// +kubebuilder:validation:Optional
	VPCID *float64 `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`
}

// SubnetSpec defines the desired state of Subnet
type SubnetSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SubnetParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SubnetInitParameters `json:"initProvider,omitempty"`
}

// SubnetStatus defines the observed state of Subnet.
type SubnetStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SubnetObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Subnet is the Schema for the Subnets API. Manages a Linode VPC subnet.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,linode}
type Subnet struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.ipv4) || (has(self.initProvider) && has(self.initProvider.ipv4))",message="spec.forProvider.ipv4 is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.label) || (has(self.initProvider) && has(self.initProvider.label))",message="spec.forProvider.label is a required parameter"
	Spec   SubnetSpec   `json:"spec"`
	Status SubnetStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SubnetList contains a list of Subnets
type SubnetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Subnet `json:"items"`
}

// Repository type metadata.
var (
	Subnet_Kind             = "Subnet"
	Subnet_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Subnet_Kind}.String()
	Subnet_KindAPIVersion   = Subnet_Kind + "." + CRDGroupVersion.String()
	Subnet_GroupVersionKind = CRDGroupVersion.WithKind(Subnet_Kind)
)

func init() {
	SchemeBuilder.Register(&Subnet{}, &SubnetList{})
}
