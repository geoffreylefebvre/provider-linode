/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AccountSettingsInitParameters struct {

	// The account-wide backups default. If true, all Linodes created will automatically be enrolled in the Backups service. If false, Linodes will not be enrolled by default, but may still be enrolled on creation or later.
	// Account-wide backups default.
	BackupsEnabled *bool `json:"backupsEnabled,omitempty" tf:"backups_enabled,omitempty"`

	// The Longview Pro tier you are currently subscribed to. The value must be a Longview Subscription ID or null for Longview Free.
	// The Longview Pro tier you are currently subscribed to.
	LongviewSubscription *string `json:"longviewSubscription,omitempty" tf:"longview_subscription,omitempty"`

	// Enables network helper across all users by default for new Linodes and Linode Configs.
	// Enables network helper across all users by default for new Linodes and Linode Configs.
	NetworkHelper *bool `json:"networkHelper,omitempty" tf:"network_helper,omitempty"`
}

type AccountSettingsObservation struct {

	// The account-wide backups default. If true, all Linodes created will automatically be enrolled in the Backups service. If false, Linodes will not be enrolled by default, but may still be enrolled on creation or later.
	// Account-wide backups default.
	BackupsEnabled *bool `json:"backupsEnabled,omitempty" tf:"backups_enabled,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The Longview Pro tier you are currently subscribed to. The value must be a Longview Subscription ID or null for Longview Free.
	// The Longview Pro tier you are currently subscribed to.
	LongviewSubscription *string `json:"longviewSubscription,omitempty" tf:"longview_subscription,omitempty"`

	// Enables monitoring for connectivity, response, and total request time.
	// Enables monitoring for connectivity, response, and total request time.
	Managed *bool `json:"managed,omitempty" tf:"managed,omitempty"`

	// Enables network helper across all users by default for new Linodes and Linode Configs.
	// Enables network helper across all users by default for new Linodes and Linode Configs.
	NetworkHelper *bool `json:"networkHelper,omitempty" tf:"network_helper,omitempty"`

	// A string describing the status of this accountâ€™s Object Storage service enrollment.
	// A string describing the status of this account's Object Storage service enrollment.
	ObjectStorage *string `json:"objectStorage,omitempty" tf:"object_storage,omitempty"`
}

type AccountSettingsParameters struct {

	// The account-wide backups default. If true, all Linodes created will automatically be enrolled in the Backups service. If false, Linodes will not be enrolled by default, but may still be enrolled on creation or later.
	// Account-wide backups default.
	// +kubebuilder:validation:Optional
	BackupsEnabled *bool `json:"backupsEnabled,omitempty" tf:"backups_enabled,omitempty"`

	// The Longview Pro tier you are currently subscribed to. The value must be a Longview Subscription ID or null for Longview Free.
	// The Longview Pro tier you are currently subscribed to.
	// +kubebuilder:validation:Optional
	LongviewSubscription *string `json:"longviewSubscription,omitempty" tf:"longview_subscription,omitempty"`

	// Enables network helper across all users by default for new Linodes and Linode Configs.
	// Enables network helper across all users by default for new Linodes and Linode Configs.
	// +kubebuilder:validation:Optional
	NetworkHelper *bool `json:"networkHelper,omitempty" tf:"network_helper,omitempty"`
}

// AccountSettingsSpec defines the desired state of AccountSettings
type AccountSettingsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AccountSettingsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AccountSettingsInitParameters `json:"initProvider,omitempty"`
}

// AccountSettingsStatus defines the observed state of AccountSettings.
type AccountSettingsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AccountSettingsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AccountSettings is the Schema for the AccountSettingss API. Manages the settings of a Linode account.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,linode}
type AccountSettings struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AccountSettingsSpec   `json:"spec"`
	Status            AccountSettingsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AccountSettingsList contains a list of AccountSettingss
type AccountSettingsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AccountSettings `json:"items"`
}

// Repository type metadata.
var (
	AccountSettings_Kind             = "AccountSettings"
	AccountSettings_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AccountSettings_Kind}.String()
	AccountSettings_KindAPIVersion   = AccountSettings_Kind + "." + CRDGroupVersion.String()
	AccountSettings_GroupVersionKind = CRDGroupVersion.WithKind(AccountSettings_Kind)
)

func init() {
	SchemeBuilder.Register(&AccountSettings{}, &AccountSettingsList{})
}
